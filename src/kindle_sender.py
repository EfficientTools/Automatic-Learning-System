"""
Exp√©diteur Kindle par Email
Envoie les PDFs g√©n√©r√©s vers Kindle via email
"""

import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email.mime.text import MIMEText
from email import encoders
from pathlib import Path
from datetime import datetime

class KindleSender:
    """Envoie du contenu vers Kindle via email"""
    
    def __init__(self, config):
        self.config = config
    
    def send_to_kindle(self, pdf_path: Path) -> bool:
        """Envoyer le PDF √† l'adresse email Kindle"""
        if not self.config.kindle_email or not self.config.sender_email:
            print("‚ö†Ô∏è Email Kindle ou email exp√©diteur non configur√©")
            print("‚ÑπÔ∏è Pour configurer:")
            print("   1. Allez sur https://www.amazon.com/myk")
            print("   2. Ajoutez votre email exp√©diteur √† la liste approuv√©e")
            print("   3. Notez votre adresse @kindle.com")
            return False
        
        smtp_config = self.config.smtp_config
        if not smtp_config.get('smtp_password'):
            print("‚ö†Ô∏è Mot de passe SMTP non configur√©")
            print("‚ÑπÔ∏è Pour Gmail, utilisez un mot de passe d'application:")
            print("   1. Activez la 2FA sur votre compte Google")
            print("   2. G√©n√©rez un mot de passe d'application")
            print("   3. Utilisez ce mot de passe dans la configuration")
            return False
        
        try:
            # Cr√©er le message
            msg = MIMEMultipart()
            msg['From'] = self.config.sender_email
            msg['To'] = self.config.kindle_email
            msg['Subject'] = f"Journal d'Apprentissage - {datetime.now().strftime('%d/%m/%Y')}"
            
            # Corps de l'email
            body = f"""
üìö Votre journal d'apprentissage quotidien est en pi√®ce jointe !

Ce PDF contient :
‚Ä¢ Les derniers articles de vos flux RSS
‚Ä¢ Des r√©sum√©s IA des vid√©os r√©centes
‚Ä¢ Des QR codes pour acc√©der aux sources originales

Date : {datetime.now().strftime('%d %B %Y')}
Taille du fichier : {pdf_path.stat().st_size / 1024:.1f} KB

Bonne lecture ! üß†‚ú®

---
G√©n√©r√© automatiquement par votre Syst√®me d'Apprentissage
            """
            
            msg.attach(MIMEText(body, 'plain', 'utf-8'))
            
            # Attacher le PDF
            with open(pdf_path, "rb") as attachment:
                part = MIMEBase('application', 'octet-stream')
                part.set_payload(attachment.read())
                encoders.encode_base64(part)
                part.add_header(
                    'Content-Disposition',
                    f'attachment; filename= {pdf_path.name}'
                )
                msg.attach(part)
            
            # Envoyer l'email
            print(f"üìß Connexion au serveur SMTP...")
            server = smtplib.SMTP(smtp_config['smtp_server'], smtp_config['smtp_port'])
            server.starttls()
            server.login(smtp_config['sender_email'], smtp_config['smtp_password'])
            
            print(f"üì§ Envoi vers {self.config.kindle_email}...")
            server.send_message(msg)
            server.quit()
            
            print(f"‚úÖ Envoy√© avec succ√®s vers Kindle: {self.config.kindle_email}")
            return True
            
        except smtplib.SMTPAuthenticationError:
            print("‚ùå Erreur d'authentification SMTP")
            print("‚ÑπÔ∏è V√©rifiez vos identifiants et utilisez un mot de passe d'application pour Gmail")
            return False
        except smtplib.SMTPRecipientsRefused:
            print("‚ùå Adresse email Kindle refus√©e")
            print("‚ÑπÔ∏è V√©rifiez que votre email exp√©diteur est autoris√© sur Amazon")
            return False
        except Exception as e:
            print(f"‚ùå √âchec de l'envoi vers Kindle: {e}")
            return False
